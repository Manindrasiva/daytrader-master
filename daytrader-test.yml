# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: 'ubuntu-latest'

steps:
#- task: DockerCompose@0
#  inputs:
#    containerregistrytype: 'Azure Container Registry'
#    azureSubscription: 'Free Trial(e8850995-7132-4e71-b8b6-83830937405c)'
#    azureContainerRegistry: '{"loginServer":"daytrader.azurecr.io", "id" : "/subscriptions/e8850995-7132-4e71-b8b6-83830937405c/resourceGroups/Daytrader/providers/Microsoft.ContainerRegistry/registries/daytrader"}'
#    dockerComposeFile: '**/docker-compose.yml'
#    action: 'Run a Docker Compose command'
#    dockerComposeCommand: 'up -d'
- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureSubscription: 'Azure subscription 1(15fb3a3b-433e-4bc9-a99b-166f264943cd)'
    dockerComposeFile: '**/docker-compose.yml'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'up -d'

- task: Bash@3
  continueOnError: true
  inputs:
    filePath: 'postman-testing/test_all.sh'
    workingDirectory: 'postman-testing/'
    failOnStderr: true


- task: PublishTestResults@2
  #continueOnError: true
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: 'postman-testing/postman_results/**.xml'
    mergeTestResults: true
    failTaskOnFailedTests: true

- task: JMeterInstaller@0
  inputs:
    jmeterVersion: '5.3'

- task: CmdLine@2
  inputs:
    script: 'jmeter -n -t jmeter-testing/DayTraderApacheJmeterScripts.jmx -l jmeter-testing/report.csv -e -o jmeter-testing/report'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: 'jmeter-testing'
    artifact: 'jmeter-reports'
    publishLocation: 'pipeline'

#- task: DockerCompose@0
#  inputs:
#    containerregistrytype: 'Azure Container Registry'
#    azureSubscription: 'Free Trial(e8850995-7132-4e71-b8b6-83830937405c)'
#    azureContainerRegistry: '{"loginServer":"daytrader.azurecr.io", "id" : "/subscriptions/e8850995-7132-4e71-b8b6-83830937405c/resourceGroups/Daytrader/providers/Microsoft.ContainerRegistry/registries/daytrader"}'
#    dockerComposeFile: '**/docker-compose.yml'
#    action: 'Run a Docker Compose command'
#    dockerComposeCommand: 'down'

- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureSubscription: 'Azure subscription 1(15fb3a3b-433e-4bc9-a99b-166f264943cd)'
    dockerComposeFile: '**/docker-compose.yml'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'down'