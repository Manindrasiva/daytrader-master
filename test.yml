# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
#variables:
#- group: Repo_Env
#
#trigger: none
#
#pool:
#  vmImage: 'ubuntu-latest'
#
#steps:
#- task: DockerCompose@0
#  inputs:
#    containerregistrytype: 'Azure Container Registry'
#    azureSubscription: 'Free Trial(e8850995-7132-4e71-b8b6-83830937405c)'
#    azureContainerRegistry: '{"loginServer":"daytrader.azurecr.io", "id" : "/subscriptions/e8850995-7132-4e71-b8b6-83830937405c/resourceGroups/Daytrader/providers/Microsoft.ContainerRegistry/registries/daytrader"}'
#    dockerComposeFile: '**/docker-compose.yml'
#    action: 'Run a Docker Compose command'
#    dockerComposeCommand: 'up -d'
#
#- task: JMeterInstaller@0
#  inputs:
#    jmeterVersion: '5.3'
#
#- script: 'jmeter --version'
#
#- task: CmdLine@2
#  inputs:
#    script: 'jmeter -n -t day-trader-java-app/daytrader-jmeter-testing/DayTraderApacheJmeterScripts.jmx -l day-trader-java-app/daytrader-jmeter-testing/report.csv -e -o day-trader-java-app/daytrader-jmeter-testing/report'
#
#- task: PublishPipelineArtifact@1
#  inputs:
#    targetPath: 'day-trader-java-app/daytrader-jmeter-testing'
#    artifact: 'jmeter-reports'
#    publishLocation: 'pipeline'
#
#- task: DockerCompose@0
#  inputs:
#    containerregistrytype: 'Azure Container Registry'
#    azureSubscription: 'Free Trial(e8850995-7132-4e71-b8b6-83830937405c)'
#    azureContainerRegistry: '{"loginServer":"daytrader.azurecr.io", "id" : "/subscriptions/e8850995-7132-4e71-b8b6-83830937405c/resourceGroups/Daytrader/providers/Microsoft.ContainerRegistry/registries/daytrader"}'
#    dockerComposeFile: '**/docker-compose.yml'
#    action: 'Run a Docker Compose command'
#    dockerComposeCommand: 'down'




jobs:
- deployment: DeployProduction
  environment: 'Production'
  strategy:
    runOnce:
      deploy:
        steps:
        - script: echo Deploying to Production