trigger: none

variables:
- group: Repo_Env

pool:
  vmImage: 'ubuntu-latest'

jobs:
- deployment: DeployProduction
  environment: 'Production'
  strategy:
    runOnce:
      deploy:
        steps:
        - task: Kubernetes@1
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'daytrader-cluster-srv-conn'
    command: 'apply'
    arguments: '-f day-trader-java-app/daytrader-kubernetes-manifests/accounts/deployment.yaml'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'
        
        - task: Kubernetes@1
          displayName: 'daytrader-accounts-service-k8s'
          inputs:
            connectionType: 'Kubernetes Service Connection'
            kubernetesServiceEndpoint: 'daytrader-cluster-srv-conn'
            command: 'apply'
            arguments: '-f day-trader-java-app/daytrader-kubernetes-manifests/accounts/service.yaml'
        
        - task: Kubernetes@1
          displayName: 'daytrader-gateway-deployment-k8s'
          inputs:
            connectionType: 'Kubernetes Service Connection'
            kubernetesServiceEndpoint: 'daytrader-cluster-srv-conn'
            command: 'apply'
            arguments: '-f day-trader-java-app/daytrader-kubernetes-manifests/gateway/deployment.yaml'
        
        - task: Kubernetes@1
          displayName: 'daytrader-gateway-service-k8s'
          inputs:
            connectionType: 'Kubernetes Service Connection'
            kubernetesServiceEndpoint: 'daytrader-cluster-srv-conn'
            command: 'apply'
            arguments: '-f day-trader-java-app/daytrader-kubernetes-manifests/gateway/service.yaml'
        
        - task: Kubernetes@1
          displayName: 'daytrader-portfolios-deployment-k8s'
          inputs:
            connectionType: 'Kubernetes Service Connection'
            kubernetesServiceEndpoint: 'daytrader-cluster-srv-conn'
            command: 'apply'
            arguments: '-f day-trader-java-app/daytrader-kubernetes-manifests/portfolios/deployment.yaml'
        
        - task: Kubernetes@1
          displayName: 'daytrader-portfolios-service-k8s'
          inputs:
            connectionType: 'Kubernetes Service Connection'
            kubernetesServiceEndpoint: 'daytrader-cluster-srv-conn'
            command: 'apply'
            arguments: '-f day-trader-java-app/daytrader-kubernetes-manifests/portfolios/service.yaml'
        
        - task: Kubernetes@1
          displayName: 'daytrader-quotes-deployment-k8s'
          inputs:
            connectionType: 'Kubernetes Service Connection'
            kubernetesServiceEndpoint: 'daytrader-cluster-srv-conn'
            command: 'apply'
            arguments: '-f day-trader-java-app/daytrader-kubernetes-manifests/quotes/deployment.yaml'
        
        - task: Kubernetes@1
          displayName: 'daytrader-quotes-service-k8s'
          inputs:
            connectionType: 'Kubernetes Service Connection'
            kubernetesServiceEndpoint: 'daytrader-cluster-srv-conn'
            command: 'apply'
            arguments: '-f day-trader-java-app/daytrader-kubernetes-manifests/quotes/service.yaml'
        
        - task: Kubernetes@1
          displayName: 'daytrader-web-deployment-k8s'
          inputs:
            connectionType: 'Kubernetes Service Connection'
            kubernetesServiceEndpoint: 'daytrader-cluster-srv-conn'
            command: 'apply'
            arguments: '-f day-trader-java-app/daytrader-kubernetes-manifests/web/deployment.yaml'
        
        - task: Kubernetes@1
          displayName: 'daytrader-web-service-k8s'
          inputs:
            connectionType: 'Kubernetes Service Connection'
            kubernetesServiceEndpoint: 'daytrader-cluster-srv-conn'
            command: 'apply'
            arguments: '-f day-trader-java-app/daytrader-kubernetes-manifests/web/service.yaml'
        
        - task: Kubernetes@1
          inputs:
            connectionType: 'Kubernetes Service Connection'
            kubernetesServiceEndpoint: 'daytrader-cluster-srv-conn'
            command: 'apply'
            arguments: '-f day-trader-java-app/daytrader-kubernetes-manifests/ingress/ingress.yaml'
            secretType: 'dockerRegistry'
        
        - script: |
            echo ${AZURE_DEVOPS_CLI_PAT} | az devops login
            az devops configure --defaults organization=https://dev.azure.com/AlphaGX project="GXEnablement" --use-git-aliases true
            if [[ $(Recipe) == R1 ]]
            then
              echo "Recipe Finished"
            elif [[ $(Recipe) == R2 ]]
            then
              az pipelines run --branch master --name "50 Domain Name SSL" -p GXEnablement
            elif [[ $(Recipe) == R3 ]]
            then
              az pipelines run --branch master --name "50 Domain Name SSL" -p GXEnablement
            fi
          env:
            AZURE_DEVOPS_CLI_PAT: $(System.AccessToken)
          displayName: 'Triggering next pipeline'